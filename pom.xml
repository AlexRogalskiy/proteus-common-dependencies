<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.netifi.proteus</groupId>
	<artifactId>proteus-common-dependencies</artifactId>
	<version>Andromeda-${revision-prefix}</version>
	<packaging>pom</packaging>
	<name>Proteus Common Dependencies</name>
	<description>Proteus Common Dependencies</description>
	<url>https://projects.spring.io/spring-boot/#</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/netifi-proteus/proteus-common-dependencies</url>
	</scm>
	<developers>
		<developer>
			<name>Netifi</name>
			<email>info@netifi.com</email>
			<organization>Netifi, Inc.</organization>
			<organizationUrl>https://www.netifi.com</organizationUrl>
		</developer>
	</developers>
	<properties>
		<revision-prefix>BUILD-SNAPSHOT</revision-prefix>

		<!-- Dependency versions -->
		<assertj.version>3.12.1</assertj.version>
		<brave-opentracing.version>0.33.10</brave-opentracing.version>
		<commons-validator.version>1.6</commons-validator.version>
		<commons-io.version>2.6</commons-io.version>
		<flyway.version>5.2.4</flyway.version>
		<guava.version>27.0.1-jre</guava.version>
		<h2.version>1.4.198</h2.version>
		<hamcrest.version>1.3</hamcrest.version>
		<hdrhistogram.version>2.1.10</hdrhistogram.version>
		<jackson.version>2.9.8</jackson.version>
		<jackson-protobuf.version>0.9.10-jackson2.9-proto3</jackson-protobuf.version>
		<javax-inject.version>1</javax-inject.version>
		<javax-annotation.version>1.3.2</javax-annotation.version>
		<jctools.version>2.1.2</jctools.version>
		<junit.version>4.12</junit.version>
		<junit-jupiter.version>5.4.0</junit-jupiter.version>
		<lmax.version>3.4.2</lmax.version>
		<log4j2.version>2.11.2</log4j2.version>
		<micrometer.version>1.0.6</micrometer.version>
		<mockito.version>2.25.0</mockito.version>
		<netty.version>4.1.33.Final</netty.version>
		<netty-tcnative.version>2.0.22.Final</netty-tcnative.version>
		<opentracing.version>0.31.0</opentracing.version>
		<postgresql.version>42.2.5</postgresql.version>
		<protobuf.version>3.6.1</protobuf.version>
		<reactor-bom.version>Californium-SR5</reactor-bom.version>
		<roaringbitmap.version>0.7.42</roaringbitmap.version>
		<rsocket-bom.version>Palladium-BUILD-SNAPSHOT</rsocket-bom.version>
		<rxjava2-jdbc.version>0.2.4</rxjava2-jdbc.version>
		<spectator.version>0.87.0</spectator.version>
		<typesafe-config.version>1.3.3</typesafe-config.version>
		<zipkin-sender.version>2.7.6</zipkin-sender.version>
		<!-- Plugin versions -->
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		<flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
		<artifactory-maven-plugin.version>2.6.1</artifactory-maven-plugin.version>
	</properties>

	<repositories>
		<!-- Repositories to allow snapshot and milestone BOM imports during development.
			This section is stripped by the flatten plugin during install/deploy. -->
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>netifi-snapshot</id>
			<url>https://artifactory.netifiinc.com/artifactory/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
		</repository>
		<repository>
			<id>netifi-release</id>
			<url>https://artifactory.netifiinc.com/artifactory/libs-release-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
		  	<id>jcenter</id>
		  	<url>https://jcenter.bintray.com/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<name>Spring Milestone</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshot</id>
			<name>Spring Snapshot</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>rabbit-milestone</id>
			<name>Rabbit Milestone</name>
			<url>https://dl.bintray.com/rabbitmq/maven-milestones</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
		  	<id>jcenter</id>
		  	<url>https://jcenter.bintray.com/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestone</id>
			<name>Spring Milestone</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshot</id>
			<name>Spring Snapshot</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.hdrhistogram</groupId>
				<artifactId>HdrHistogram</artifactId>
				<version>${hdrhistogram.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit-jupiter.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-inline</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jctools</groupId>
				<artifactId>jctools-core</artifactId>
				<version>${jctools.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-core</artifactId>
				<version>${flyway.version}</version>
			</dependency>

			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.davidmoten</groupId>
				<artifactId>rxjava2-jdbc</artifactId>
				<version>${rxjava2-jdbc.version}</version>
			</dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2-mvstore</artifactId>
				<version>${h2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.roaringbitmap</groupId>
				<artifactId>RoaringBitmap</artifactId>
				<version>${roaringbitmap.version}</version>
			</dependency>

			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>${lmax.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<dependency>
				<groupId>io.zipkin.reporter2</groupId>
				<artifactId>zipkin-sender-okhttp3</artifactId>
				<version>${zipkin-sender.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax-inject.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>${javax-annotation.version}</version>
			</dependency>

			<dependency>
				<groupId>io.opentracing</groupId>
				<artifactId>opentracing-api</artifactId>
				<version>${opentracing.version}</version>
			</dependency>
			<dependency>
				<groupId>io.opentracing.brave</groupId>
				<artifactId>brave-opentracing</artifactId>
				<version>${brave-opentracing.version}</version>
			</dependency>

			<dependency>
				<groupId>com.netflix.spectator</groupId>
				<artifactId>spectator-api</artifactId>
				<version>${spectator.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.spectator</groupId>
				<artifactId>spectator-ext-ipc</artifactId>
				<version>${spectator.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.spectator</groupId>
				<artifactId>spectator-reg-atlas</artifactId>
				<version>${spectator.version}</version>
			</dependency>

			<dependency>
				<groupId>com.typesafe</groupId>
				<artifactId>config</artifactId>
				<version>${typesafe-config.version}</version>
			</dependency>

			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-core</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-jersey2</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-appoptics</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-atlas</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-azure-monitor</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-cloudwatch</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-datadog</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-dynatrace</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-elastic</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-ganglia</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-graphite</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-humio</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-influx</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-jmx</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-kairos</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-new-relic</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-signalfx</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-statsd</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-wavefront</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-test</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j2.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protoc</artifactId>
				<version>${protobuf.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hubspot.jackson</groupId>
				<artifactId>jackson-datatype-protobuf</artifactId>
				<version>${jackson-protobuf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-bom</artifactId>
				<version>${netty.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative-boringssl-static</artifactId>
				<version>${netty-tcnative.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative</artifactId>
				<version>${netty-tcnative.version}</version>
			</dependency>

			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-bom</artifactId>
				<version>${reactor-bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>io.rsocket</groupId>
				<artifactId>rsocket-bom</artifactId>
				<version>${rsocket-bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>${xml-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jfrog.buildinfo</groupId>
					<artifactId>artifactory-maven-plugin</artifactId>
					<version>${artifactory-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flyway.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<!-- Create an effective POM (with versions expanded) for the CLI and
							documentation -->
						<id>flatten-effective-pom</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>false</updatePomFile>
							<outputDirectory>${project.build.directory}/effective-pom</outputDirectory>
							<flattenedPomFilename>spring-boot-dependencies.xml</flattenedPomFilename>
							<flattenMode>oss</flattenMode>
							<pomElements>
								<dependencyManagement>expand</dependencyManagement>
								<pluginManagement>expand</pluginManagement>
								<properties>remove</properties>
								<repositories>remove</repositories>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<!-- Flatten and simplify our own POM for install/deploy -->
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>bom</flattenMode>
							<pomElements>
								<pluginManagement>keep</pluginManagement>
								<properties>keep</properties>
								<repositories>remove</repositories>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>flatten-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<!-- Cleanup the effective POM -->
						<id>post-process-effective-pom</id>
						<phase>process-resources</phase>
						<goals>
							<goal>transform</goal>
						</goals>
						<configuration>
							<transformationSets>
								<transformationSet>
									<dir>${project.build.directory}/effective-pom</dir>
									<outputDir>${project.build.directory}/effective-pom</outputDir>
									<stylesheet>src/main/xslt/post-process-flattened-pom.xsl</stylesheet>
									<outputProperties>
										<outputProperty>
											<name>indent</name>
											<value>yes</value>
										</outputProperty>
									</outputProperties>
								</transformationSet>
							</transformationSets>
						</configuration>
					</execution>
					<execution>
						<!-- Cleanup the flattened project POM -->
						<id>post-process-flattened-pom</id>
						<phase>process-resources</phase>
						<goals>
							<goal>transform</goal>
						</goals>
						<configuration>
							<transformationSets>
								<transformationSet>
									<dir>${project.basedir}</dir>
									<outputDir>${project.basedir}</outputDir>
									<includes>.flattened-pom.xml</includes>
									<stylesheet>src/main/xslt/post-process-flattened-pom.xsl</stylesheet>
									<outputProperties>
										<outputProperty>
											<name>indent</name>
											<value>yes</value>
										</outputProperty>
									</outputProperties>
								</transformationSet>
							</transformationSets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<!-- Attach effective POM -->
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/effective-pom/spring-boot-dependencies.xml</file>
									<type>effective-pom</type>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jfrog.buildinfo</groupId>
				<artifactId>artifactory-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>build-info</id>
						<goals>
							<goal>publish</goal>
						</goals>
						<configuration>
							<publisher>
								<contextUrl>https://artifactory.netifiinc.com/artifactory</contextUrl>
								<username>${env.NETIFI_ARTIFACTORY_USERNAME}</username>
								<password>${env.NETIFI_ARTIFACTORY_PASSWORD}</password>
								<repoKey>libs-release-local</repoKey>
								<snapshotRepoKey>libs-snapshot-local</snapshotRepoKey>
							</publisher>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
